name: CI

on:
  push:
    branches: ["main"]
  pull_request:

permissions:
  contents: read

jobs:
  find-libcnb-buildpacks:
    name: Find libcnb buildpacks
    runs-on: ubuntu-22.04
    outputs:
      libcnb-buildpacks: ${{ steps.find-buildpack-dirs.outputs.buildpacks }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - id: find-buildpack-dirs
        name: Find libcnb buildpack directories
        run: |
          echo "buildpacks=$( \
            find . -type d -execdir test -e "{}/buildpack.toml" -a -e "{}/Cargo.toml" \; -print \
            | sort \
            | uniq \
            | jq -nRc '[inputs] 
                | map({ dir: ., name: split("/") | last | split("nodejs-") | last } 
                | [
                  . + { builder_tag: 24, arch: "arm64", group: "1" } 
                  . + { builder_tag: 24, arch: "arm64", group: "2" } 
                  . + { builder_tag: 24, arch: "arm64", group: "3" } 
                  . + { builder_tag: 24, arch: "arm64", group: "4" } 
                  . + { builder_tag: 24, arch: "arm64", group: "5" } 
                ]) 
                | flatten' \
          )" >> $GITHUB_OUTPUT

  rust-integration-test:
    name: ${{ matrix.name }} (${{ matrix.builder_tag }}, ${{ matrix.arch }}) - ${{matrix.group}} of 5
    runs-on: ${{ matrix.arch == 'arm64' && 'pub-hk-ubuntu-24.04-small-arm-small-noip' || 'ubuntu-latest' }}
    env:
      INTEGRATION_TEST_CNB_BUILDER: heroku/builder:${{ matrix.builder_tag }}
    needs: find-libcnb-buildpacks
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.find-libcnb-buildpacks.outputs.libcnb-buildpacks) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install musl-tools
        run: sudo apt-get install musl-tools -y --no-install-recommends
      - name: Update Rust toolchain
        run: rustup update
      - name: Install Rust linux-musl target
        run: rustup target add ${{ matrix.arch == 'arm64' && 'aarch64-unknown-linux-musl' || 'x86_64-unknown-linux-musl' }}
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.3
      - name: Install Pack CLI
        uses: buildpacks/github-actions/setup-pack@v5.7.2
      - name: Pull builder image
        run: docker pull ${{ env.INTEGRATION_TEST_CNB_BUILDER }}
      - name: Run integration tests
        working-directory: ${{ matrix.dir }}
        run: cargo test --locked -- --ignored --test-threads 16

