name: Rebuild Snapshots

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  rebuild-snapshots:
    name: Rebuild Snapshots
    runs-on: ubuntu-24.04
    env:
      INTEGRATION_TEST_CNB_BUILDER: heroku/builder:24
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install musl-tools
        run: sudo apt-get install musl-tools -y --no-install-recommends

      - name: Update Rust toolchain
        run: rustup update

      - name: Install Rust linux-musl target
        run: rustup target add x86_64-unknown-linux-musl

      - name: Install cargo insta
        run: cargo install cargo-insta

      - name: Install cargo nextest
        uses: taiki-e/install-action@nextest

      - name: Rust Cache
        uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0

      - name: Install Pack CLI
        uses: buildpacks/github-actions/setup-pack@bc04fbfd78e903050bab17a2dcf907e71e3c4afa # v5.9.2

      - name: Pull builder image
        run: docker pull ${{ env.INTEGRATION_TEST_CNB_BUILDER }}

      - name: Pull run image
        run: |
          RUN_IMAGE=$(
            docker inspect --format='{{index .Config.Labels "io.buildpacks.builder.metadata"}}' '${{ env.INTEGRATION_TEST_CNB_BUILDER }}' \
            | jq --exit-status --raw-output '.stack.runImage.image'
          )
          docker pull "${RUN_IMAGE}"

      - name: Configure test runner
        run: |
          mkdir .config
          cat > .config/nextest.toml << EOF
          [profile.default]
          slow-timeout = "5m"
          retries = 2
          EOF

      - name: Rebuild snapshots
        run: cargo insta test --accept --test-runner nextest -- --include-ignored
        env:
          # This might be unnecessary since `cargo insta test` should already do this, but I was seeing some unexpected
          # test failures from integration tests until I added this.
          INSTA_FORCE_PASS: 1

      - name: Configure Git
        run: |
          git config --global user.name "${{ vars.LINGUIST_GH_APP_USERNAME }}"  
          git config --global user.email "${{ vars.LINGUIST_GH_APP_EMAIL }}"

      - name: Commit and push changes
        run: |
          git status
          git add "**/*.snap"
          if git diff --quiet && git diff --staged --quiet; then
            echo "No changes to commit"
          else
            echo "Committing and pushing changes"
            git commit -m "Update integration test snapshots"
            git push
          fi
