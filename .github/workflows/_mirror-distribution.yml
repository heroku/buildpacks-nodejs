name: _get-unmirrored-distributions

on:
  workflow_call:
    inputs:
      name:
        type: string
        required: true
      distribution:
        type: string
        required: true
    secrets:
      AWS_S3_BUCKET:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  get-unmirrored-versions:
    name: Get unmirrored versions - ${{ inputs.name }}
    runs-on: ubuntu-22.04
    outputs:
      versions: ${{ steps.get-unmirrored-versions.outputs.versions }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Update Rust toolchain
        run: rustup update

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.5.1

      - name: Get unmirrored versions
        id: get-unmirrored-versions
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        run: echo "versions=$(cargo run --bin list_unmirrored_versions ${{ inputs.distribution }})" >> $GITHUB_OUTPUT

  mirror-node-distribution:
    if: inputs.distribution == 'node'
    name: Mirror Distribution - ${{ inputs.name }} - ${{ matrix.version }} ${{ matrix.platform }}
    needs: [get-unmirrored-versions]
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        platform: [ "linux-x64" ]
        version: ${{ fromJson(needs.get-unmirrored-versions.outputs.versions) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download and verify distribution
        run: common/bin/download-verify-node "${{ matrix.version }}" "${{ matrix.platform }}"

      - name: Upload Node.js distribution to Nodebin S3 bucket
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: >
          aws s3 cp
          "node-v${{ matrix.version }}-${{ matrix.platform }}.tar.gz"
          "s3://${{ secrets.AWS_S3_BUCKET }}/node/release/${{ matrix.platform}}/node-v${{ matrix.version }}-${{ matrix.platform }}.tar.gz"

  mirror-npm-package-distribution:
    if: inputs.distribution != 'node'
    name: Mirror Distribution - ${{ inputs.name }} - ${{ matrix.version }}
    runs-on: ubuntu-22.04
    needs: [get-unmirrored-versions]
    strategy:
      fail-fast: false
      matrix:
        version: ${{ fromJson(needs.get-unmirrored-versions.outputs.versions) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download and verify npm package
        run: common/bin/download-verify-npm-package ${{ inputs.distribution }} "${{ matrix.version }}"

      - name: Upload distribution to S3 bucket
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: >
          aws s3 cp
          "${{ inputs.distribution }}-v${{ matrix.version }}.tar.gz"
          "s3://${{ secrets.AWS_S3_BUCKET }}/${{ inputs.distribution }}/release/${{ inputs.distribution }}-v${{ matrix.version }}.tar.gz"
