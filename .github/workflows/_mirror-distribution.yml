name: _get-unmirrored-distributions

env:
  CARGO_TERM_COLOR: always
  
on:
  workflow_call:
    inputs:
      distribution:
        type: string
        required: true
    secrets:
      AWS_S3_BUCKET:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  get-unmirrored-versions:
    name: Get Unmirrored Versions
    runs-on: ubuntu-24.04
    outputs:
      versions: ${{ steps.get-unmirrored-versions.outputs.versions }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Update Rust toolchain
        run: rustup update

      - name: Rust Cache
        uses: Swatinem/rust-cache@f0deed1e0edfc6a9be95417288c0e1099b1eeec3 # v2.7.7

      - name: Get unmirrored versions
        id: get-unmirrored-versions
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        run: echo "versions=$(cargo run --bin list_unmirrored_versions ${{ inputs.distribution }})" >> $GITHUB_OUTPUT

  mirror-distribution:
    name: Mirror v${{ matrix.version }} ${{ matrix.platform && format('({0})', matrix.platform) || '' }}
    needs: [get-unmirrored-versions]
    runs-on: ubuntu-24.04
    if: needs.get-unmirrored-versions.outputs.versions != '[]'
    strategy:
      fail-fast: false
      matrix:
        version: ${{ fromJson(needs.get-unmirrored-versions.outputs.versions) }}
        include: ${{ fromJson(inputs.distribution == 'node' && '[{"platform":"linux-x64"}]' || '[]') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download and verify distribution
        run: |
          if [ "${{ inputs.distribution }}" = "node" ]; then
            common/bin/download-verify-node "${{ matrix.version }}" "${{ matrix.platform }}"
          else
            common/bin/download-verify-npm-package "${{ inputs.distribution }}" "${{ matrix.version }}"
          fi

      - name: Upload ${{ matrix.version }} to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          if [ "${{ inputs.distribution }}" = "node" ]; then
            aws s3 cp \
              "node-v${{ matrix.version }}-${{ matrix.platform }}.tar.gz" \
              "s3://${{ secrets.AWS_S3_BUCKET }}/node/release/${{ matrix.platform}}/node-v${{ matrix.version }}-${{ matrix.platform }}.tar.gz"
          else
            aws s3 cp \
              "${{ inputs.distribution }}-v${{ matrix.version }}.tar.gz" \
              "s3://${{ secrets.AWS_S3_BUCKET }}/${{ inputs.distribution }}/release/${{ inputs.distribution }}-v${{ matrix.version }}.tar.gz"
          fi
