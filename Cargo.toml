[package]
name = "nodejs-buildpack"
rust-version.workspace = true
edition.workspace = true

[lints]
workspace = true

[dependencies]
bullet_stream = "0.11"
fun_run = "0.6"
heroku-nodejs-utils.workspace = true
indoc = "2"
libcnb = { version = "=0.29.1", features = ["trace"] }
libherokubuildpack = { version = "=0.29.1", default-features = false, features = [
    "download",
    "fs",
    "inventory",
    "tar",
] }
serde = "1"
serde_json = "1"
sha2 = "0.10.9"
tempfile = "3"
toml = "0.9"

[dev-dependencies]
insta = "1"
libcnb-test = "=0.29.1"
regex = "1"
reqwest = "0.12"
reqwest-middleware = "0.4"
serde_json = "1"
test_support.workspace = true
tokio = "1"

[workspace]
resolver = "2"
members = [
    "crates/nodejs-utils",
    "crates/test_support",
    "crates/xtask-update-nodejs-inventory"
]

[workspace.package]
rust-version = "1.89"
edition = "2024"

[workspace.lints.rust]
unreachable_pub = "warn"
unsafe_code = "warn"
unused_crate_dependencies = "warn"
# Allows the usage of cfg(coverage_nightly).
# cargo-llvm-cov enables that config when instrumenting our code, so we can enable
# the experimental coverage_attribute feature.
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(coverage_nightly)'] }

[workspace.lints.clippy]
panic_in_result_fn = "warn"
pedantic = { level = "warn", priority = -1 }
unwrap_used = "warn"
enum_variant_names = "allow"
missing_errors_doc = "allow"
missing_panics_doc = "allow"
module_name_repetitions = "allow"

[workspace.dependencies]
heroku-nodejs-utils = { path = "./crates/nodejs-utils" }
test_support = { path = "./crates/test_support" }

[profile.release]
strip = true
