---
source: crates/test_support/src/lib.rs
---
===> ANALYZING
Image with name "<image-name>" not found
===> DETECTING
heroku/nodejs <buildpack-version>
===> RESTORING
<restoring-output>
===> BUILDING

## Heroku Node.js

- Checking Node.js version
  - Detected Node.js version range: `>=20.0.0 <21.0.0-0`
  - Resolved Node.js version: `20.19.4`
- Installing Node.js distribution
  - GET https://nodejs.org/download/release/v20.19.4/node-v20.19.4-<arch>.tar.gz ... (OK)
  - Downloading ... (<time_elapsed>)
  - Verifying checksum
  - Extracting Node.js `20.19.4 (<arch>)`
  - Installing Node.js `20.19.4 (<arch>)` ... (<time_elapsed>)
- Using Corepack version `0.32.0`
- Found `packageManager` set to `pnpm@9.1.1+sha256.9551e803dcb7a1839fdf5416153a844060c7bce013218ce823410532504ac10b` in `package.json`
- Enabling Corepack
  - Creating Corepack shims
  - Executing `corepack enable --install-directory /layers/heroku_nodejs/shim/bin pnpm`
- Installing `pnpm@9.1.1+sha256.9551e803dcb7a1839fdf5416153a844060c7bce013218ce823410532504ac10b`
  - Creating Corepack package manager
  - Running `corepack prepare`

      Preparing pnpm@9.1.1+sha256.9551e803dcb7a1839fdf5416153a844060c7bce013218ce823410532504ac10b...

  - Done (<time_elapsed>)
- Setting up pnpm dependency store
  - Creating new pnpm content-addressable store
  - Creating pnpm virtual store
- Installing dependencies
  - Running `pnpm install --frozen-lockfile`

      Lockfile is up to date, resolution step is skipped
      Packages: +2
      ++
      .../node_modules/dtrace-provider install$ node-gyp rebuild || node suppress-error.js
      <NODE-GYP BUILD OUTPUT> 
      .../node_modules/dtrace-provider install: Done

      dependencies:
      + dtrace-provider 0.8.8

      Done in <time_elapsed>

  - Done (<time_elapsed>)
- Pruning unused dependencies from pnpm content-addressable store
  - Running `pnpm store prune`

      Removed all cached metadata files
      Removed 35 files
      Removed 1 package

  - Done (<time_elapsed>)
- Running scripts
  - No build scripts found
- Pruning dev dependencies
  - Running `pnpm prune --prod --ignore-scripts`

      Lockfile is up to date, resolution step is skipped
      Already up to date

      devDependencies: skipped

  - Done (<time_elapsed>)
- Done (finished in <time_elapsed>)
===> EXPORTING
Adding layer 'heroku/nodejs:available_parallelism'
Adding layer 'heroku/nodejs:dist'
Adding layer 'heroku/nodejs:mgr'
Adding layer 'heroku/nodejs:shim'
Adding layer 'heroku/nodejs:virtual'
Adding layer 'heroku/nodejs:web_env'
Adding layer 'buildpacksio/lifecycle:launch.sbom'
Added 1/1 app layer(s)
Adding layer 'buildpacksio/lifecycle:launcher'
Adding layer 'buildpacksio/lifecycle:config'
Adding label 'io.buildpacks.lifecycle.metadata'
Adding label 'io.buildpacks.build.metadata'
Adding label 'io.buildpacks.project.metadata'
no default process type
Saving <image-name>...
*** Images (<random-hex>):
      <image-name>
Adding cache layer 'heroku/nodejs:addressable'
Adding cache layer 'heroku/nodejs:dist'
Adding cache layer 'heroku/nodejs:mgr'
Adding cache layer 'heroku/nodejs:shim'
Successfully built image '<image-name>'

--------------------------------------------- REBUILD ---------------------------------------------
===> ANALYZING
Restoring data for SBOM from previous image
===> DETECTING
heroku/nodejs <buildpack-version>
===> RESTORING
<restoring-output>
===> BUILDING

## Heroku Node.js

- Checking Node.js version
  - Detected Node.js version range: `>=20.0.0 <21.0.0-0`
  - Resolved Node.js version: `20.19.4`
- Installing Node.js distribution
  - Reusing Node.js 20.19.4 (<arch>)
- Using Corepack version `0.32.0`
- Found `packageManager` set to `pnpm@9.1.1+sha256.9551e803dcb7a1839fdf5416153a844060c7bce013218ce823410532504ac10b` in `package.json`
- Enabling Corepack
  - Restoring Corepack shims
  - Executing `corepack enable --install-directory /layers/heroku_nodejs/shim/bin pnpm`
- Installing `pnpm@9.1.1+sha256.9551e803dcb7a1839fdf5416153a844060c7bce013218ce823410532504ac10b`
  - Restoring Corepack package manager
  - Running `corepack prepare`

      Preparing pnpm@9.1.1+sha256.9551e803dcb7a1839fdf5416153a844060c7bce013218ce823410532504ac10b...

  - Done (<time_elapsed>)
- Setting up pnpm dependency store
  - Restoring pnpm content-addressable store from cache
  - Creating pnpm virtual store
- Installing dependencies
  - Running `pnpm install --frozen-lockfile`

      Lockfile is up to date, resolution step is skipped
      Packages: +2
      ++
      .../node_modules/dtrace-provider install$ node-gyp rebuild || node suppress-error.js
      <NODE-GYP BUILD OUTPUT> 
      .../node_modules/dtrace-provider install: Done

      dependencies:
      + dtrace-provider 0.8.8

      Done in <time_elapsed>

  - Done (<time_elapsed>)
- Running scripts
  - No build scripts found
- Pruning dev dependencies
  - Running `pnpm prune --prod --ignore-scripts`

      Lockfile is up to date, resolution step is skipped
      Already up to date

      devDependencies: skipped

  - Done (<time_elapsed>)
- Done (finished in <time_elapsed>)
===> EXPORTING
Reusing layer 'heroku/nodejs:available_parallelism'
Reusing layer 'heroku/nodejs:dist'
Adding layer 'heroku/nodejs:mgr'
Reusing layer 'heroku/nodejs:shim'
Adding layer 'heroku/nodejs:virtual'
Reusing layer 'heroku/nodejs:web_env'
Reusing layer 'buildpacksio/lifecycle:launch.sbom'
Added 1/1 app layer(s)
Reusing layer 'buildpacksio/lifecycle:launcher'
Reusing layer 'buildpacksio/lifecycle:config'
Adding label 'io.buildpacks.lifecycle.metadata'
Adding label 'io.buildpacks.build.metadata'
Adding label 'io.buildpacks.project.metadata'
no default process type
Saving <image-name>...
*** Images (<random-hex>):
      <image-name>
Adding cache layer 'heroku/nodejs:addressable'
Reusing cache layer 'heroku/nodejs:dist'
Adding cache layer 'heroku/nodejs:dist'
Adding cache layer 'heroku/nodejs:mgr'
Reusing cache layer 'heroku/nodejs:shim'
Adding cache layer 'heroku/nodejs:shim'
Successfully built image '<image-name>'
