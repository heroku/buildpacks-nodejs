---
source: test_support/src/lib.rs
---
===> ANALYZING
Image with name "<image-name>" not found
===> DETECTING
3 of 4 buildpacks participating
heroku/nodejs-engine      4.1.1
heroku/nodejs-npm-engine  4.1.1
heroku/nodejs-npm-install 4.1.1
===> RESTORING
<restoring-output>
===> BUILDING

## Heroku Node.js Engine

- Checking Node.js version
  - Detected Node.js version range: `16.20.2`
  - Resolved Node.js version: `16.20.2`
- Installing Node.js distribution
  - GET https://nodejs.org/download/release/v16.20.2/node-v16.20.2-<arch>.tar.gz ... (OK)
  - Downloading ... (<time_elapsed>)
  - Verifying checksum
  - Extracting Node.js `16.20.2 (<arch>)`
  - Installing Node.js `16.20.2 (<arch>)` ... (<time_elapsed>)
- Done (finished in <time_elapsed>)

## Heroku Node.js npm Engine

- Determining npm package information
  - Found `engines.npm` version `9.6.6` declared in `package.json`
  - GET https://registry.npmjs.org/npm ... (OK)
  - Downloading ... (<time_elapsed>)
  - Resolved npm version `9.6.6` to `9.6.6`
- Installing npm
  - GET https://registry.npmjs.org/npm/-/npm-9.6.6.tgz ... (OK)
  - Downloading ... (<time_elapsed>)
  - Removing npm bundled with Node.js
  - Installing requested npm
  - Successfully installed `npm@9.6.6`
- Done (finished in <time_elapsed>)

## Heroku Node.js npm Install

- Installing node modules
  - Using npm version `9.6.6`
  - Creating npm cache
  - Configuring npm cache directory
  - Running `npm ci`

      npm WARN old lockfile 
      npm WARN old lockfile The package-lock.json file was created with an old version of npm,
      npm WARN old lockfile so supplemental metadata must be fetched from the registry.
      npm WARN old lockfile 
      npm WARN old lockfile This is a one-time fix-up, please be patient...
      npm WARN old lockfile 

      added <NUMBER> packages, and audited <NUMBER> packages in <time_elapsed>

      found 0 vulnerabilities

  - Done (<time_elapsed>)
- Running scripts
  - No build scripts found
- Pruning dev dependencies
  - Running `npm prune`

      npm WARN old lockfile 
      npm WARN old lockfile The package-lock.json file was created with an old version of npm,
      npm WARN old lockfile so supplemental metadata must be fetched from the registry.
      npm WARN old lockfile 
      npm WARN old lockfile This is a one-time fix-up, please be patient...
      npm WARN old lockfile 

      up to date, audited <N> packages in <time_elapsed>

      found 0 vulnerabilities

  - Done (<time_elapsed>)
- Configuring default processes
  - Skipping default web process (no start script defined)
- Done (finished in <time_elapsed>)
===> EXPORTING
Adding layer 'heroku/nodejs-engine:available_parallelism'
Adding layer 'heroku/nodejs-engine:dist'
Adding layer 'heroku/nodejs-engine:web_env'
Adding layer 'heroku/nodejs-npm-engine:npm_engine'
Adding layer 'heroku/nodejs-npm-install:npm_runtime_config'
Adding layer 'buildpacksio/lifecycle:launch.sbom'
Added 1/1 app layer(s)
Adding layer 'buildpacksio/lifecycle:launcher'
Adding layer 'buildpacksio/lifecycle:config'
Adding label 'io.buildpacks.lifecycle.metadata'
Adding label 'io.buildpacks.build.metadata'
Adding label 'io.buildpacks.project.metadata'
no default process type
Saving <image-name>...
*** Images (<random-hex>):
      <image-name>
Adding cache layer 'heroku/nodejs-engine:dist'
Adding cache layer 'heroku/nodejs-npm-engine:npm_engine'
Adding cache layer 'heroku/nodejs-npm-engine:npm_packument'
Adding cache layer 'heroku/nodejs-npm-install:npm_cache'
Successfully built image '<image-name>'

--------------------------------------------- REBUILD ---------------------------------------------
===> ANALYZING
Restoring data for SBOM from previous image
===> DETECTING
3 of 4 buildpacks participating
heroku/nodejs-engine      4.1.1
heroku/nodejs-npm-engine  4.1.1
heroku/nodejs-npm-install 4.1.1
===> RESTORING
<restoring-output>
===> BUILDING

## Heroku Node.js Engine

- Checking Node.js version
  - Detected Node.js version range: `16.20.2`
  - Resolved Node.js version: `16.20.2`
- Installing Node.js distribution
  - Reusing Node.js 16.20.2 (<arch>)
- Done (finished in <time_elapsed>)

## Heroku Node.js npm Engine

- Determining npm package information
  - Found `engines.npm` version `9.6.6` declared in `package.json`
  - GET https://registry.npmjs.org/npm ... (Not Modified)
  - Using cached packument for npm
  - Resolved npm version `9.6.6` to `9.6.6`
- Installing npm
  - Requested npm version is already installed
  - Successfully installed `npm@9.6.6`
- Done (finished in <time_elapsed>)

## Heroku Node.js npm Install

- Installing node modules
  - Using npm version `9.6.6`
  - Restoring npm cache
  - Configuring npm cache directory
  - Running `npm ci`

      npm WARN old lockfile 
      npm WARN old lockfile The package-lock.json file was created with an old version of npm,
      npm WARN old lockfile so supplemental metadata must be fetched from the registry.
      npm WARN old lockfile 
      npm WARN old lockfile This is a one-time fix-up, please be patient...
      npm WARN old lockfile 

      added <NUMBER> packages, and audited <NUMBER> packages in <time_elapsed>

      found 0 vulnerabilities

  - Done (<time_elapsed>)
- Running scripts
  - No build scripts found
- Pruning dev dependencies
  - Running `npm prune`

      npm WARN old lockfile 
      npm WARN old lockfile The package-lock.json file was created with an old version of npm,
      npm WARN old lockfile so supplemental metadata must be fetched from the registry.
      npm WARN old lockfile 
      npm WARN old lockfile This is a one-time fix-up, please be patient...
      npm WARN old lockfile 

      up to date, audited <N> packages in <time_elapsed>

      found 0 vulnerabilities

  - Done (<time_elapsed>)
- Configuring default processes
  - Skipping default web process (no start script defined)
- Done (finished in <time_elapsed>)
===> EXPORTING
Reusing layer 'heroku/nodejs-engine:available_parallelism'
Reusing layer 'heroku/nodejs-engine:dist'
Reusing layer 'heroku/nodejs-engine:web_env'
Reusing layer 'heroku/nodejs-npm-install:npm_runtime_config'
Reusing layer 'buildpacksio/lifecycle:launch.sbom'
Reused 1/1 app layer(s)
Reusing layer 'buildpacksio/lifecycle:launcher'
Reusing layer 'buildpacksio/lifecycle:config'
Adding label 'io.buildpacks.lifecycle.metadata'
Adding label 'io.buildpacks.build.metadata'
Adding label 'io.buildpacks.project.metadata'
no default process type
Saving <image-name>...
*** Images (<random-hex>):
      <image-name>
Reusing cache layer 'heroku/nodejs-engine:dist'
Adding cache layer 'heroku/nodejs-engine:dist'
Reusing cache layer 'heroku/nodejs-npm-engine:npm_packument'
Adding cache layer 'heroku/nodejs-npm-engine:npm_packument'
Adding cache layer 'heroku/nodejs-npm-install:npm_cache'
Successfully built image '<image-name>'
