---
source: test_support/src/lib.rs
---
===> ANALYZING
Image with name "<image-name>" not found
===> DETECTING
heroku/nodejs-engine       <buildpack-version>
heroku/nodejs-corepack     <buildpack-version>
heroku/nodejs-pnpm-install <buildpack-version>
===> RESTORING
<restoring-output>
===> BUILDING

## Heroku Node.js Engine

- Checking Node.js version
  - Node.js version not specified, using `22.x`
  - Resolved Node.js version: `22.18.0`
- Installing Node.js distribution
  - GET https://nodejs.org/download/release/v22.18.0/node-v22.18.0-<arch>.tar.gz ... (OK)
  - Downloading ... (<time_elapsed>)
  - Verifying checksum
  - Extracting Node.js `22.18.0 (<arch>)`
  - Installing Node.js `22.18.0 (<arch>)` ... (<time_elapsed>)
- Done (finished in <time_elapsed>)

## Heroku Node.js Corepack

- Using Corepack version `0.33.0`
- Found `packageManager` set to `pnpm@8.11.0` in `package.json`
- Enabling Corepack
  - Creating Corepack shims
  - Executing `corepack enable --install-directory /layers/heroku_nodejs-corepack/shim/bin pnpm`
- Installing `pnpm@8.11.0`
  - Creating Corepack package manager
  - Running `corepack prepare`

      Preparing pnpm@8.11.0...

  - Done (<time_elapsed>)
- Done (finished in <time_elapsed>)

## Heroku Node.js pnpm Install

- Setting up pnpm dependency store
  - Creating new pnpm content-addressable store
  - Creating pnpm virtual store
- Installing dependencies
  - Running `pnpm install --frozen-lockfile`

      Lockfile is up to date, resolution step is skipped
      Packages: +676
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      <ESBUILD POSTINSTALL_SCRIPT>
      <ESBUILD POSTINSTALL_SCRIPT>
      <ESBUILD POSTINSTALL_SCRIPT>
      <ESBUILD POSTINSTALL_SCRIPT>

      devDependencies:
      + @nuxt/devtools 1.0.4
      + nuxt 3.8.2
      + vue 3.3.9
      + vue-router 4.2.5

      The dependency was already listed in devDependencies.
      If you want to make it a prod dependency, then move it manually.


      > pnpm-8-nuxt@ postinstall /workspace
      > nuxt prepare


       <NODE DEPRECATION ERROR>

      âœ” Types generated in .nuxt
      Done in <time_elapsed>

  - Done (<time_elapsed>)
- Pruning unused dependencies from pnpm content-addressable store
  - Running `pnpm store prune`

      Removed all cached metadata files
      Removed 12 files
      Removed 2 packages

  - Done (<time_elapsed>)
- Running scripts
  - Running `pnpm run build`


      > pnpm-8-nuxt@ build /workspace
      > nuxt build

      <NUXT BUILD OUTPUT>

  - Done (<time_elapsed>)
- Pruning dev dependencies

! Pruning skipped due to presence of lifecycle scripts
!
! The version of pnpm used (8.11.0) will execute the following lifecycle scripts declared in package.json during pruning which can cause build failures:
! - pnpm:devPreinstall
! - preinstall
! - install
! - postinstall
! - prepare
!
! Since pruning can't be done safely for your build, it will be skipped. To fix this you must upgrade your version of pnpm to 8.15.6 or higher.

- Done (finished in <time_elapsed>)
===> EXPORTING
Adding layer 'heroku/nodejs-engine:available_parallelism'
Adding layer 'heroku/nodejs-engine:dist'
Adding layer 'heroku/nodejs-engine:web_env'
Adding layer 'heroku/nodejs-corepack:mgr'
Adding layer 'heroku/nodejs-corepack:shim'
Adding layer 'heroku/nodejs-pnpm-install:virtual'
Adding layer 'buildpacksio/lifecycle:launch.sbom'
Added 1/1 app layer(s)
Adding layer 'buildpacksio/lifecycle:launcher'
Adding layer 'buildpacksio/lifecycle:config'
Adding layer 'buildpacksio/lifecycle:process-types'
Adding label 'io.buildpacks.lifecycle.metadata'
Adding label 'io.buildpacks.build.metadata'
Adding label 'io.buildpacks.project.metadata'
Setting default process type 'web'
Saving <image-name>...
*** Images (<random-hex>):
      <image-name>
Adding cache layer 'heroku/nodejs-engine:dist'
Adding cache layer 'heroku/nodejs-corepack:mgr'
Adding cache layer 'heroku/nodejs-corepack:shim'
Adding cache layer 'heroku/nodejs-pnpm-install:addressable'
Successfully built image '<image-name>'
