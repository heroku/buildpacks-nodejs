---
source: test_support/src/lib.rs
---
## Heroku Node.js Engine

- Checking Node.js version
  - Detected Node.js version range: `>=20.0.0 <21.0.0-0`
  - Resolved Node.js version: `20.19.4`
- Installing Node.js distribution
  - GET https://nodejs.org/download/release/v20.19.4/node-v20.19.4-<arch>.tar.gz ... (OK)
  - Downloading ... (<time_elapsed>)
  - Verifying checksum
  - Extracting Node.js `20.19.4 (<arch>)`
  - Installing Node.js `20.19.4 (<arch>)` ... (<time_elapsed>)
- Done (finished in <time_elapsed>)

## Heroku Node.js Corepack

- Using Corepack version `0.32.0`
- Found `packageManager` set to `pnpm@9.1.1+sha256.9551e803dcb7a1839fdf5416153a844060c7bce013218ce823410532504ac10b` in `package.json`
- Enabling Corepack
  - Creating Corepack shims
  - Executing `corepack enable --install-directory /layers/heroku_nodejs-corepack/shim/bin pnpm`
- Installing `pnpm@9.1.1+sha256.9551e803dcb7a1839fdf5416153a844060c7bce013218ce823410532504ac10b`
  - Creating Corepack package manager
  - Running `corepack prepare`

      Preparing pnpm@9.1.1+sha256.9551e803dcb7a1839fdf5416153a844060c7bce013218ce823410532504ac10b...

  - Done (<time_elapsed>)
- Done (finished in <time_elapsed>)

## Heroku Node.js pnpm Install

- Setting up pnpm dependency store
  - Creating new pnpm content-addressable store
  - Creating pnpm virtual store
- Installing dependencies
  - Running `pnpm install --frozen-lockfile`

      Lockfile is up to date, resolution step is skipped
      Packages: +2
      ++
      .../node_modules/dtrace-provider install$ node-gyp rebuild || node suppress-error.js
      <NODE-GYP BUILD OUTPUT> 
      .../node_modules/dtrace-provider install: Done

      dependencies:
      + dtrace-provider 0.8.8

      Done in <time_elapsed>

  - Done (<time_elapsed>)
- Pruning unused dependencies from pnpm content-addressable store
  - Running `pnpm store prune`

      Removed all cached metadata files
      Removed 35 files
      Removed 1 package

  - Done (<time_elapsed>)
- Running scripts
  - No build scripts found
- Pruning dev dependencies
  - Running `pnpm prune --prod --ignore-scripts`

      Lockfile is up to date, resolution step is skipped
      Already up to date

      devDependencies: skipped

  - Done (<time_elapsed>)
- Done (finished in <time_elapsed>)

--------------------------------------------- REBUILD ---------------------------------------------

## Heroku Node.js Engine

- Checking Node.js version
  - Detected Node.js version range: `>=20.0.0 <21.0.0-0`
  - Resolved Node.js version: `20.19.4`
- Installing Node.js distribution
  - Reusing Node.js 20.19.4 (<arch>)
- Done (finished in <time_elapsed>)

## Heroku Node.js Corepack

- Using Corepack version `0.32.0`
- Found `packageManager` set to `pnpm@9.1.1+sha256.9551e803dcb7a1839fdf5416153a844060c7bce013218ce823410532504ac10b` in `package.json`
- Enabling Corepack
  - Restoring Corepack shims
  - Executing `corepack enable --install-directory /layers/heroku_nodejs-corepack/shim/bin pnpm`
- Installing `pnpm@9.1.1+sha256.9551e803dcb7a1839fdf5416153a844060c7bce013218ce823410532504ac10b`
  - Restoring Corepack package manager
  - Running `corepack prepare`

      Preparing pnpm@9.1.1+sha256.9551e803dcb7a1839fdf5416153a844060c7bce013218ce823410532504ac10b...

  - Done (<time_elapsed>)
- Done (finished in <time_elapsed>)

## Heroku Node.js pnpm Install

- Setting up pnpm dependency store
  - Restoring pnpm content-addressable store from cache
  - Creating pnpm virtual store
- Installing dependencies
  - Running `pnpm install --frozen-lockfile`

      Lockfile is up to date, resolution step is skipped
      Packages: +2
      ++
      .../node_modules/dtrace-provider install$ node-gyp rebuild || node suppress-error.js
      <NODE-GYP BUILD OUTPUT> 
      .../node_modules/dtrace-provider install: Done

      dependencies:
      + dtrace-provider 0.8.8

      Done in <time_elapsed>

  - Done (<time_elapsed>)
- Running scripts
  - No build scripts found
- Pruning dev dependencies
  - Running `pnpm prune --prod --ignore-scripts`

      Lockfile is up to date, resolution step is skipped
      Already up to date

      devDependencies: skipped

  - Done (<time_elapsed>)
- Done (finished in <time_elapsed>)
