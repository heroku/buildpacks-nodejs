version: 2.1

orbs:
  pack: buildpacks/pack@0.2.4
  ruby: circleci/ruby@1.1.2
  heroku-buildpacks:
    commands:
      install-yq:
        steps:
          - run:
              name: "Install yj 5.0.0"
              command: |
                bin_dir="$(mktemp -d)"
                curl --retry 3 --fail --max-time 10 --location "https://github.com/sclevine/yj/releases/download/v5.0.0/yj-linux" --output "${bin_dir}/yj"
                chmod +x "${bin_dir}/yj"

                echo "export PATH=\"${bin_dir}:\${PATH}\"" >> $BASH_ENV
      install-build-dependencies:
        steps:
          - run:
              name: "Install rsync, jq, and musl-tools via apt"
              command: sudo apt-get update && sudo apt-get install -y --no-install-recommends rsync jq musl-tools
          - install-yq
      install-rust:
        steps:
          - run:
              name: "Install rustc stable"
              command: |
                curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y -t x86_64-unknown-linux-musl
                echo "export PATH=\"$HOME/.cargo/bin:$PATH\"" >> $BASH_ENV
      install-libcnb-cargo:
        steps:
          - run:
              name: "Install libcnb-cargo"
              command: cargo install libcnb-cargo

jobs:
  package-buildpack:
    parameters:
      buildpack-dir:
        type: string
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - setup_remote_docker
      - pack/install-pack:
          version: 0.27.0
      - heroku-buildpacks/install-build-dependencies
      - heroku-buildpacks/install-rust
      - heroku-buildpacks/install-libcnb-cargo
      - run:
          name: "Build and package buildpack with retries"
          command: |
            n=1
            until [ "$n" -ge 5 ]
            do
              package_toml="<< parameters.buildpack-dir >>/package.toml"

              if [[ -f "<< parameters.buildpack-dir >>/build.sh" ]]; then
                "./<< parameters.buildpack-dir >>/build.sh"
                package_toml="<< parameters.buildpack-dir >>/target/package.toml"
              fi

              pack buildpack package test --config "${package_toml}" && break
              ((n++))
            done

  cutlass-integration-test:
    parameters:
      test-dir:
        type: string
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout
      - pack/install-pack:
          version: 0.27.0
      - ruby/install-deps
      - heroku-buildpacks/install-build-dependencies
      - heroku-buildpacks/install-rust
      - heroku-buildpacks/install-libcnb-cargo
      - run:
          name: "Run rspec tests against a given directory"
          command: |
            bundle exec rspec << parameters.test-dir >>

  shell-linting:
    docker:
      - image: koalaman/shellcheck-alpine:v0.7.2
    steps:
      - run: "apk add git"
      # shfmt is currently (Jan 2021) only available in the edge community repository.
      - run: "apk add shfmt --repository=http://dl-3.alpinelinux.org/alpine/edge/community"
      - checkout
      - run:
          name: "shellcheck"
          command: "shfmt -f . | grep -v ^test/ | xargs shellcheck"
      - run:
          name: "shfmt"
          command: |
            scripts=$(shfmt -f . | grep -v ^test/ | grep -v '_shpec.sh$');  \
            if ! echo $scripts | xargs shfmt -d > /dev/null; then           \
              echo $scripts | xargs shfmt -w && git diff --exit-code;       \
            fi

  shpec:
    parameters:
      stack-version:
        type: "string"
        default: "20"
      buildpack-dir:
        type: "string"
    docker:
      - image: "heroku/heroku:<<parameters.stack-version>>-build"
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      # Required so that yq is available for buildpacks that depend upon the nodejs-engine's copy of yq.
      - heroku-buildpacks/install-yq
      - run:
          name: Install shpec
          command: sh -c "`curl -L https://raw.githubusercontent.com/rylnd/shpec/master/install.sh`"
      - run:
          name: Shpec unit tests on heroku-<<parameters.stack-version>>
          command: shpec << parameters.buildpack-dir >>/shpec/*_shpec.sh

  rust-integration-test:
    machine:
      image: ubuntu-2004:202201-02
    resource_class: xlarge
    steps:
      - checkout
      - pack/install-pack:
          version: 0.27.0
      - heroku-buildpacks/install-build-dependencies
      - heroku-buildpacks/install-rust
      - run:
          command: cargo test --locked -- --ignored

  rust-unit-test:
    docker:
      - image: cimg/rust:1.60
    steps:
      - checkout
      - run:
          command: cargo test --locked

  rust-linting:
    docker:
      - image: cimg/rust:1.60
    steps:
      - checkout
      - run:
          name: rustfmt
          command: cargo fmt -- --check --verbose
      - run:
          name: clippy
          command: cargo clippy --all-targets --all-features --locked -- --deny warnings

workflows:
  version: 2
  ci:
    jobs:
      - shell-linting
      - rust-linting
      - rust-unit-test
      - rust-integration-test
      - shpec:
          matrix:
            parameters:
              buildpack-dir:
                - "buildpacks/npm"
              stack-version:
                - "18"
                - "20"
                - "22"

      - package-buildpack:
          matrix:
            parameters:
              buildpack-dir:
                - "buildpacks/nodejs-engine"
                - "buildpacks/nodejs-function-invoker"
                - "buildpacks/npm"
                - "meta-buildpacks/nodejs"
                - "meta-buildpacks/nodejs-function"
                - "test/meta-buildpacks/nodejs"
                - "test/meta-buildpacks/nodejs-function"

      - cutlass-integration-test:
          matrix:
            parameters:
              test-dir:
                - "test/specs/node-function"
                - "test/specs/node"
